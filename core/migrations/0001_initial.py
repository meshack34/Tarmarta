# Generated by Django 5.2.5 on 2025-08-29 07:16

import django.contrib.auth.models
import django.contrib.auth.validators
import django.core.validators
import django.db.models.deletion
import django.utils.timezone
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='PackSize',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('label', models.CharField(max_length=50)),
                ('sku', models.CharField(max_length=128, unique=True)),
                ('unit', models.CharField(default='g', max_length=32)),
                ('is_active', models.BooleanField(default=True)),
            ],
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=200)),
                ('category', models.CharField(max_length=50)),
                ('description', models.TextField(blank=True)),
                ('is_active', models.BooleanField(default=True)),
                ('sku', models.CharField(blank=True, max_length=128, null=True, unique=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='SyncRecord',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('object_type', models.CharField(max_length=50)),
                ('object_id', models.CharField(max_length=100)),
                ('action', models.CharField(choices=[('CREATE', 'Create'), ('UPDATE', 'Update'), ('DELETE', 'Delete')], max_length=20)),
                ('external_ref', models.CharField(blank=True, max_length=100, null=True)),
                ('status', models.CharField(choices=[('PENDING', 'Pending'), ('SENT', 'Sent'), ('FAILED', 'Failed')], default='PENDING', max_length=20)),
                ('last_attempt', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('phone', models.CharField(blank=True, max_length=32, null=True)),
                ('phone_verified', models.BooleanField(default=False)),
                ('email_verified', models.BooleanField(default=False)),
                ('role', models.CharField(choices=[('admin', 'Admin'), ('agent', 'Agent'), ('manager', 'Manager'), ('marketing', 'Marketing Officer')], default='agent', max_length=16)),
                ('region', models.CharField(blank=True, max_length=128, null=True)),
                ('last_login_ip', models.GenericIPAddressField(blank=True, null=True)),
                ('is_soft_deleted', models.BooleanField(default=False)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('manager', models.ForeignKey(blank=True, limit_choices_to={'role': 'manager'}, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='team', to=settings.AUTH_USER_MODEL)),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'User',
                'verbose_name_plural': 'Users',
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Attachment',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('file', models.FileField(upload_to='attachments/%Y/%m/%d/')),
                ('associated_type', models.CharField(blank=True, max_length=64, null=True)),
                ('associated_id', models.UUIDField(blank=True, null=True)),
                ('mime_type', models.CharField(blank=True, max_length=128, null=True)),
                ('processed', models.BooleanField(default=False)),
                ('owner', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='AuditTrail',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('action', models.CharField(max_length=200)),
                ('model', models.CharField(max_length=100)),
                ('object_id', models.CharField(max_length=100)),
                ('ip_address', models.GenericIPAddressField(blank=True, null=True)),
                ('user_agent', models.TextField(blank=True, null=True)),
                ('user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Market',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=200)),
                ('region', models.CharField(max_length=128)),
                ('type', models.CharField(choices=[('URBAN', 'Urban'), ('RURAL', 'Rural'), ('SUPERMARKET', 'Supermarket'), ('WHOLESALE', 'Wholesale')], default='URBAN', max_length=20)),
                ('gps_lat', models.DecimalField(blank=True, decimal_places=6, max_digits=9, null=True)),
                ('gps_long', models.DecimalField(blank=True, decimal_places=6, max_digits=9, null=True)),
                ('status', models.BooleanField(default=True)),
            ],
            options={
                'unique_together': {('name', 'region')},
            },
        ),
        migrations.CreateModel(
            name='Campaign',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=255)),
                ('type', models.CharField(choices=[('trade', 'Trade Promotion'), ('consumer', 'Consumer Promotion'), ('event', 'Event'), ('promo', 'Promotion'), ('sampling', 'Sampling'), ('discount', 'Discount')], default='promo', max_length=32)),
                ('description', models.TextField(blank=True)),
                ('budget_total', models.DecimalField(decimal_places=2, default=0, max_digits=14)),
                ('budget_spent', models.DecimalField(decimal_places=2, default=0, max_digits=14)),
                ('start_date', models.DateField()),
                ('end_date', models.DateField()),
                ('objectives', models.JSONField(blank=True, null=True)),
                ('target_regions', models.JSONField(blank=True, null=True)),
                ('status', models.CharField(choices=[('planned', 'Planned'), ('active', 'Active'), ('closed', 'Closed'), ('draft', 'Draft'), ('paused', 'Paused'), ('completed', 'Completed'), ('cancelled', 'Cancelled')], default='planned', max_length=32)),
                ('approval_required', models.BooleanField(default=False)),
                ('approved_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='approved_campaigns', to=settings.AUTH_USER_MODEL)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='created_campaigns', to=settings.AUTH_USER_MODEL)),
                ('target_markets', models.ManyToManyField(blank=True, related_name='campaigns', to='core.market')),
                ('target_products', models.ManyToManyField(blank=True, related_name='campaigns', to='core.product')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Outlet',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=200)),
                ('owner_name', models.CharField(blank=True, max_length=120, null=True)),
                ('contact_phone', models.CharField(blank=True, max_length=20, null=True)),
                ('location', models.CharField(blank=True, max_length=255, null=True)),
                ('descriptor', models.TextField(blank=True, null=True)),
                ('market', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='outlets', to='core.market')),
            ],
            options={
                'unique_together': {('market', 'name')},
            },
        ),
        migrations.CreateModel(
            name='Allocation',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('slip_number', models.CharField(max_length=100, unique=True)),
                ('quantity', models.IntegerField()),
                ('notes', models.TextField(blank=True, null=True)),
                ('processed', models.BooleanField(default=False)),
                ('agent', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='allocations', to=settings.AUTH_USER_MODEL)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('pack', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='core.packsize')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Adjustment',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('quantity', models.IntegerField(help_text='Signed quantity: + inbound, - outbound')),
                ('reason_code', models.CharField(max_length=128)),
                ('notes', models.TextField(blank=True, null=True)),
                ('processed', models.BooleanField(default=False)),
                ('actor', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('pack', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='core.packsize')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='packsize',
            name='product',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='packs', to='core.product'),
        ),
        migrations.CreateModel(
            name='PromoCode',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('code', models.CharField(max_length=64, unique=True)),
                ('discount_type', models.CharField(blank=True, max_length=32, null=True)),
                ('discount_value', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('valid_from', models.DateTimeField()),
                ('valid_to', models.DateTimeField()),
                ('usage_limit', models.PositiveIntegerField(blank=True, null=True)),
                ('used_count', models.PositiveIntegerField(default=0)),
                ('description', models.TextField(blank=True)),
                ('campaign', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='promo_codes', to='core.campaign')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Return',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('quantity', models.IntegerField()),
                ('reason_code', models.CharField(max_length=128)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('received', 'Received'), ('rejected', 'Rejected')], default='pending', max_length=32)),
                ('processed', models.BooleanField(default=False)),
                ('agent', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='returns', to=settings.AUTH_USER_MODEL)),
                ('attachments', models.ManyToManyField(blank=True, to='core.attachment')),
                ('pack', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='core.packsize')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Sale',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('quantity', models.IntegerField(validators=[django.core.validators.MinValueValidator(1)])),
                ('unit_price', models.DecimalField(decimal_places=2, max_digits=12)),
                ('discount_amount', models.DecimalField(decimal_places=2, default=0, max_digits=12)),
                ('revenue', models.DecimalField(decimal_places=2, default=0, editable=False, max_digits=14)),
                ('timestamp', models.DateTimeField(default=django.utils.timezone.now)),
                ('ledger_ref', models.UUIDField(blank=True, null=True)),
                ('idempotency_key', models.CharField(blank=True, max_length=255, null=True)),
                ('payment_method', models.CharField(choices=[('cash', 'Cash'), ('credit', 'Credit'), ('mpesa', 'M-Pesa'), ('card', 'Card')], default='cash', max_length=20)),
                ('currency', models.CharField(default='KES', max_length=10)),
                ('agent', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='sales', to=settings.AUTH_USER_MODEL)),
                ('campaign', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='sales', to='core.campaign')),
                ('market', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='sales', to='core.market')),
                ('pack', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='core.packsize')),
                ('promo_code', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='core.promocode')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Payment',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('method', models.CharField(choices=[('cash', 'Cash'), ('credit', 'Credit'), ('mpesa', 'M-Pesa'), ('card', 'Card')], max_length=32)),
                ('amount', models.DecimalField(decimal_places=2, max_digits=14)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('completed', 'Completed'), ('failed', 'Failed'), ('refunded', 'Refunded')], default='pending', max_length=32)),
                ('transaction_ref', models.CharField(blank=True, max_length=128, null=True)),
                ('processed_at', models.DateTimeField(blank=True, null=True)),
                ('notes', models.TextField(blank=True, null=True)),
                ('sale', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='payments', to='core.sale')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='StockLedger',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('movement_type', models.CharField(choices=[('allocation', 'Allocation'), ('transfer', 'Transfer'), ('sale', 'Sale'), ('return', 'Return'), ('adjustment', 'Adjustment')], max_length=32)),
                ('source_ref', models.UUIDField(blank=True, null=True)),
                ('quantity', models.IntegerField()),
                ('balance_after', models.IntegerField(blank=True, null=True)),
                ('reason_code', models.CharField(blank=True, max_length=128, null=True)),
                ('actor', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='actor_ledger', to=settings.AUTH_USER_MODEL)),
                ('agent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='ledger_entries', to=settings.AUTH_USER_MODEL)),
                ('market', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='core.market')),
                ('pack', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='core.packsize')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='core.product')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Transfer',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('quantity', models.IntegerField()),
                ('reason', models.CharField(blank=True, max_length=255, null=True)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('approved', 'Approved'), ('rejected', 'Rejected'), ('completed', 'Completed')], default='pending', max_length=32)),
                ('processed', models.BooleanField(default=False)),
                ('approver', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='approved_transfers', to=settings.AUTH_USER_MODEL)),
                ('from_agent', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='transfers_out', to=settings.AUTH_USER_MODEL)),
                ('pack', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='core.packsize')),
                ('to_agent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='transfers_in', to=settings.AUTH_USER_MODEL)),
                ('to_market', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='core.market')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Visit',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('datetime', models.DateTimeField(default=django.utils.timezone.now)),
                ('geo_lat', models.DecimalField(blank=True, decimal_places=6, max_digits=9, null=True)),
                ('geo_long', models.DecimalField(blank=True, decimal_places=6, max_digits=9, null=True)),
                ('notes', models.TextField(blank=True, null=True)),
                ('purpose', models.CharField(blank=True, choices=[('checkup', 'Check-up'), ('delivery', 'Delivery'), ('promo', 'Promotion')], max_length=20, null=True)),
                ('agent', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='visits', to=settings.AUTH_USER_MODEL)),
                ('market', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='visits', to='core.market')),
                ('media', models.ManyToManyField(blank=True, related_name='visits', to='core.attachment')),
                ('outlet', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='core.outlet')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='sale',
            name='visit',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='sales', to='core.visit'),
        ),
        migrations.CreateModel(
            name='Activity',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=200)),
                ('activity_type', models.CharField(max_length=64)),
                ('count', models.PositiveIntegerField(default=0)),
                ('cost', models.DecimalField(decimal_places=2, default=0, max_digits=12)),
                ('notes', models.TextField(blank=True, null=True)),
                ('executed_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('agent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='assigned_activities', to=settings.AUTH_USER_MODEL)),
                ('media', models.ManyToManyField(blank=True, to='core.attachment')),
                ('campaign', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='activities', to='core.campaign')),
                ('market', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='core.market')),
                ('outlet', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='core.outlet')),
                ('visit', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='activities', to='core.visit')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='InventorySnapshot',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('quantity', models.IntegerField()),
                ('snapshot_date', models.DateField(auto_now_add=True)),
                ('agent', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('market', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.market')),
                ('pack', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.packsize')),
            ],
            options={
                'unique_together': {('agent', 'market', 'pack', 'snapshot_date')},
            },
        ),
        migrations.CreateModel(
            name='PriceList',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('unit_price', models.DecimalField(decimal_places=2, max_digits=12, validators=[django.core.validators.MinValueValidator(0)])),
                ('tax_rate', models.DecimalField(decimal_places=2, default=0, max_digits=5)),
                ('discount_policy', models.JSONField(blank=True, null=True)),
                ('effective_from', models.DateField()),
                ('effective_to', models.DateField(blank=True, null=True)),
                ('status', models.CharField(choices=[('active', 'Active'), ('inactive', 'Inactive')], default='active', max_length=16)),
                ('market', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='core.market')),
                ('pack', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='prices', to='core.packsize')),
            ],
            options={
                'indexes': [models.Index(fields=['pack', 'market', 'effective_from', 'effective_to'], name='core_pricel_pack_id_d41e79_idx')],
                'unique_together': {('pack', 'market', 'effective_from')},
            },
        ),
        migrations.AlterUniqueTogether(
            name='packsize',
            unique_together={('product', 'label')},
        ),
    ]
